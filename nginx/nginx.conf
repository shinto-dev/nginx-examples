user  nginx;
worker_processes  auto; # how many worker processes to spawn

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid; # where to store the pid file


events {
    worker_connections  1024; # max number of simultaneous connections that can be opened
}

## http for layer 7
## stream for layer 4
http {
    include       /etc/nginx/mime.types; # mime types are used to determine the type of file being served
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;


    upstream grpc_services {
        server grpc1:8080;
        server grpc2:8080;
    }

    # definition of virtual host. You can have multiple of these.
    server {
        listen 8080 http2;

        location / {
          grpc_pass grpc://grpc_services;
#             grpc_pass grpc://grpc1:8080;
        }

#         location /grpc1 {
#            grpc_pass grpc://grpc1:8080;
#         }
    }

    server {
        listen 8081;

        # prefix match example. this means /greeting will also match.
        location /greet {
            return 200 "Hello from NGINX /greet";
        }

        # exact match example. this means /greet1ing will not match.
        location = /greet1 {
            return 200 "Hello from NGINX /greet1";
        }

        # regex match example. this means /greet20ing will match. This is case sensitive.
        location ~ /greet2[0-9] {
            return 200 "Hello from NGINX /greet2";
        }

        # regex match example. this means /greet30ing will match. This is case insensitive.
        location ~* /greet3[0-9] {
            return 200 "Hello from NGINX /greet2";
        }

        # Note: regex has more priority than prefix match.

        # preferential match example. this means /greet4ing will match.
        # more priority than regex match.
        location ^~ /greet4 {
            return 200 "Hello from NGINX /greet4";
        }

        # priorities
        # 1. exact match
        # 2. preferential prefix match
        # 3. regex match
        # 4. prefix match
    }
}
